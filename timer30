#include <xc.h>

// Определение частоты кварцевого резонатора
#define FOSC 4000000

// Определение регистров
#define TRISA TRISA
#define TRISB TRISB
#define PORTA PORTA
#define PORTB PORTB

// Определение битов
#define RA0  0
#define RA1  1
#define RB0  0
#define RB3  3

void main() {
  // Настройка конфигурации
  TRISA = 0b11111100; // RA0 и RA1 как входы
  TRISB = 0b11110000; // RB0 и RB3 как выходы

  // Настройка внутренних подтягивающих резисторов
  OPTION |= 0b00000100; // Внутренние подтягивающие резисторы для RA6, RA7

  // Настройка таймера
  TMR0 = 0; // Сброс таймера
  OPTION &= 0b11110000; // Настройка prescaler = 1:1
  INTCON |= 0b00000100; // Разрешение прерывания по переполнению TMR0

  // Запуск программы
  while (1) {
    // Ожидание прерывания
    asm("SLEEP");
  }
}

void interrupt timer0_isr() {
  // Проверка состояния RA0 и RA1
  if ((PORTA & (1 << RA0)) == 0 || (PORTA & (1 << RA1)) == 0) {
    // Сброс таймера
    TMR0 = 0;

    // Запуск таймера
    OPTION |= 0b00000100; // Разрешение прерывания по переполнению TMR0
  }

  // Проверка значения таймера
  if (TMR0 >= 24000) { // 30 секунд * 1000 мкс/секунду / 4 мкс/такт = 24000 тактов
    // Сброс таймера
    TMR0 = 0;

    // Перевод RB0 и RB3 в состояние логического 
